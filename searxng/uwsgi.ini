[uwsgi]
# General settings
http-socket = 0.0.0.0:8080
chdir = /usr/local/searxng/searx/
wsgi-file = webapp.py
callable = application
buffer-size = 32768
enable-threads = true
cache2 = name=searxngcache,items=2000,blocks=2000,blocksize=4096,bitmap=1

# Process management 
workers = %(%ENV_UWSGI_WORKERS:-4)
cheaper = %(%ENV_UWSGI_CHEAPER:-1)
processes = %(%ENV_UWSGI_PROCESSES:-2)
threads = %(%ENV_UWSGI_THREADS:-4)

# Resource limits
harakiri = %(%ENV_UWSGI_HARAKIRI:-30)
reload-on-rss = %(%ENV_UWSGI_RELOAD_ON_RSS:-512)
worker-reload-mercy = 15
memory-report = %(%ENV_UWSGI_MEMORY_REPORT:-0)
evil-reload-on-exception = true
max-worker-lifetime = 3600

# Static files
static-map = /static=/usr/local/searxng/searx/static

# Logging
disable-logging = true
log-slow = 1000
log-4xx = true
log-5xx = true

# Performance tuning
single-interpreter = true
need-app = true
offload-threads = %(%ENV_UWSGI_OFFLOAD_THREADS:-4)
post-buffering = 4096
socket-timeout = 30
thunder-lock = true
vacuum = true
master = true

# Who will run the code
uid = searxng
gid = searxng

# automatically set processes name to something meaningful
auto-procname = true

# No keep alive
# See https://github.com/searx/searx-docker/issues/24
add-header = Connection: close

# expires set to one day
static-expires = /* 86400
static-gzip-all = True
